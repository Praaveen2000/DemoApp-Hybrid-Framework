<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="11" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-11T13:48:24 IST" name="DemoApp Automation Suite" finished-at="2023-12-11T13:50:39 IST" duration-ms="135552">
    <groups>
    </groups>
    <test started-at="2023-12-11T13:48:24 IST" name="DemoApp Tests" finished-at="2023-12-11T13:50:39 IST" duration-ms="135552">
      <class name="com.demoapp.qa.testcases.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:49:35 IST" name="setup" finished-at="2023-12-11T13:49:44 IST" duration-ms="8568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:49:44 IST" name="loginWithValidCredentials" data-provider="readValidDataFromExcel" finished-at="2023-12-11T13:49:45 IST" duration-ms="1069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[praveenkaverimohan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:49:45 IST" name="tearDown" finished-at="2023-12-11T13:49:45 IST" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:49:45 IST" name="setup" finished-at="2023-12-11T13:49:54 IST" duration-ms="9064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:49:54 IST" name="loginWithValidCredentials" data-provider="readValidDataFromExcel" finished-at="2023-12-11T13:49:55 IST" duration-ms="1166" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester123@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:49:56 IST" name="tearDown" finished-at="2023-12-11T13:49:56 IST" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:49:56 IST" name="setup" finished-at="2023-12-11T13:50:05 IST" duration-ms="9014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInvalidCredentials(java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:05 IST" name="loginWithInvalidCredentials" data-provider="readInvalidDataFromExcel" finished-at="2023-12-11T13:50:06 IST" duration-ms="782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xyz@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Warning: No match for E-Mail Address and/or Password.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:06 IST" name="tearDown" finished-at="2023-12-11T13:50:07 IST" duration-ms="901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:07 IST" name="setup" finished-at="2023-12-11T13:50:17 IST" duration-ms="9783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInvalidEmailAndValidPass(java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:17 IST" name="loginWithInvalidEmailAndValidPass" data-provider="readInvalidEmailAndValidPassFromExcel" finished-at="2023-12-11T13:50:17 IST" duration-ms="799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xyz@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Warning: No match for E-Mail Address and/or Password.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmailAndValidPass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:18 IST" name="tearDown" finished-at="2023-12-11T13:50:18 IST" duration-ms="434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:18 IST" name="setup" finished-at="2023-12-11T13:50:27 IST" duration-ms="8782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidEmailAndInvalidPass(java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:27 IST" name="loginWithValidEmailAndInvalidPass" data-provider="readValidEmailAndInvalidPassFromExcel" finished-at="2023-12-11T13:50:28 IST" duration-ms="733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[praveenkaverimohan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Warning: No match for E-Mail Address and/or Password.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidEmailAndInvalidPass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:28 IST" name="tearDown" finished-at="2023-12-11T13:50:28 IST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:28 IST" name="setup" finished-at="2023-12-11T13:50:38 IST" duration-ms="10115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithoutCredentials(java.lang.String)[pri:5, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:38 IST" name="loginWithoutCredentials" data-provider="readBlankDataFromExcel" finished-at="2023-12-11T13:50:39 IST" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Warning: No match for E-Mail Address and/or Password.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.LoginTest@5b247367]" started-at="2023-12-11T13:50:39 IST" name="tearDown" finished-at="2023-12-11T13:50:39 IST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.demoapp.qa.testcases.LoginTest -->
      <class name="com.demoapp.qa.testcases.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.SearchTest@1750fbeb]" started-at="2023-12-11T13:49:16 IST" name="setup" finished-at="2023-12-11T13:49:23 IST" duration-ms="6979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithValidProduct()[pri:1, instance:com.demoapp.qa.testcases.SearchTest@1750fbeb]" started-at="2023-12-11T13:49:23 IST" name="searchWithValidProduct" finished-at="2023-12-11T13:49:25 IST" duration-ms="1607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.SearchTest@1750fbeb]" started-at="2023-12-11T13:49:25 IST" name="tearDown" finished-at="2023-12-11T13:49:26 IST" duration-ms="379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.SearchTest@1750fbeb]" started-at="2023-12-11T13:49:26 IST" name="setup" finished-at="2023-12-11T13:49:32 IST" duration-ms="6506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithInValidProduct()[pri:2, instance:com.demoapp.qa.testcases.SearchTest@1750fbeb]" started-at="2023-12-11T13:49:32 IST" name="searchWithInValidProduct" finished-at="2023-12-11T13:49:33 IST" duration-ms="1279" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Warning message not displayed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Warning message not displayed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.demoapp.qa.testcases.SearchTest.searchWithInValidProduct(SearchTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.SearchTest@1750fbeb]" started-at="2023-12-11T13:49:34 IST" name="tearDown" finished-at="2023-12-11T13:49:34 IST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="searchWithBlankValue()[pri:3, instance:com.demoapp.qa.testcases.SearchTest@1750fbeb]" started-at="2023-12-11T13:49:34 IST" name="searchWithBlankValue" finished-at="2023-12-11T13:49:34 IST" depends-on-methods="com.demoapp.qa.testcases.SearchTest.searchWithInValidProduct" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method com.demoapp.qa.testcases.SearchTest.searchWithBlankValue() on instance com.demoapp.qa.testcases.SearchTest@1750fbeb depends on not successfully finished methods 
[com.demoapp.qa.testcases.SearchTest.searchWithInValidProduct() on instance com.demoapp.qa.testcases.SearchTest@1750fbeb]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method com.demoapp.qa.testcases.SearchTest.searchWithBlankValue() on instance com.demoapp.qa.testcases.SearchTest@1750fbeb depends on not successfully finished methods 
[com.demoapp.qa.testcases.SearchTest.searchWithInValidProduct() on instance com.demoapp.qa.testcases.SearchTest@1750fbeb]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithBlankValue -->
      </class> <!-- com.demoapp.qa.testcases.SearchTest -->
      <class name="com.demoapp.qa.testcases.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:48:24 IST" name="setup" finished-at="2023-12-11T13:48:37 IST" duration-ms="13055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerAccountWithMandatoryFields()[pri:1, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:48:37 IST" name="registerAccountWithMandatoryFields" finished-at="2023-12-11T13:48:40 IST" duration-ms="2362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccountWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:48:41 IST" name="tearDown" finished-at="2023-12-11T13:48:41 IST" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:48:41 IST" name="setup" finished-at="2023-12-11T13:48:51 IST" duration-ms="10421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerAccountWithAllFields()[pri:2, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:48:51 IST" name="registerAccountWithAllFields" finished-at="2023-12-11T13:48:53 IST" duration-ms="1811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccountWithAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:48:53 IST" name="tearDown" finished-at="2023-12-11T13:48:54 IST" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:48:54 IST" name="setup" finished-at="2023-12-11T13:49:04 IST" duration-ms="10120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerAccountWithExistingEmail()[pri:3, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:49:04 IST" name="registerAccountWithExistingEmail" finished-at="2023-12-11T13:49:05 IST" duration-ms="1513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccountWithExistingEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:49:06 IST" name="tearDown" finished-at="2023-12-11T13:49:06 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:49:06 IST" name="setup" finished-at="2023-12-11T13:49:15 IST" duration-ms="9468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerAccountWithoutFillingAnyFields()[pri:4, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:49:15 IST" name="registerAccountWithoutFillingAnyFields" finished-at="2023-12-11T13:49:16 IST" duration-ms="637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerAccountWithoutFillingAnyFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.RegisterTest@53045c6c]" started-at="2023-12-11T13:49:16 IST" name="tearDown" finished-at="2023-12-11T13:49:16 IST" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.demoapp.qa.testcases.RegisterTest -->
    </test> <!-- DemoApp Tests -->
  </suite> <!-- DemoApp Automation Suite -->
</testng-results>
