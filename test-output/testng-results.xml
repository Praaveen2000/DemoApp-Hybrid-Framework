<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-11T16:27:04 IST" name="Default suite" finished-at="2023-12-11T16:27:23 IST" duration-ms="18648">
    <groups>
    </groups>
    <test started-at="2023-12-11T16:27:04 IST" name="Default test" finished-at="2023-12-11T16:27:23 IST" duration-ms="18648">
      <class name="com.demoapp.qa.testcases.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.SearchTest@742ff096]" started-at="2023-12-11T16:27:05 IST" name="setup" finished-at="2023-12-11T16:27:13 IST" duration-ms="7477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithValidProduct(java.lang.String)[pri:1, instance:com.demoapp.qa.testcases.SearchTest@742ff096]" started-at="2023-12-11T16:27:13 IST" name="searchWithValidProduct" data-provider="readDataFromValidProductSearch" finished-at="2023-12-11T16:27:14 IST" duration-ms="1228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HP ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.SearchTest@742ff096]" started-at="2023-12-11T16:27:14 IST" name="tearDown" finished-at="2023-12-11T16:27:14 IST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.demoapp.qa.testcases.SearchTest@742ff096]" started-at="2023-12-11T16:27:14 IST" name="setup" finished-at="2023-12-11T16:27:21 IST" duration-ms="6598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithInValidProduct(java.lang.String)[pri:2, instance:com.demoapp.qa.testcases.SearchTest@742ff096]" started-at="2023-12-11T16:27:21 IST" name="searchWithInValidProduct" data-provider="readDataFromInvalidProductSearch" finished-at="2023-12-11T16:27:22 IST" duration-ms="1501" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Baking Soda]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Warning message not displayed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Warning message not displayed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.demoapp.qa.testcases.SearchTest.searchWithInValidProduct(SearchTest.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.demoapp.qa.testcases.SearchTest@742ff096]" started-at="2023-12-11T16:27:22 IST" name="tearDown" finished-at="2023-12-11T16:27:23 IST" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="searchWithBlankValue()[pri:3, instance:com.demoapp.qa.testcases.SearchTest@742ff096]" started-at="2023-12-11T16:27:23 IST" name="searchWithBlankValue" finished-at="2023-12-11T16:27:23 IST" depends-on-methods="com.demoapp.qa.testcases.SearchTest.searchWithInValidProduct" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method com.demoapp.qa.testcases.SearchTest.searchWithBlankValue() on instance com.demoapp.qa.testcases.SearchTest@742ff096 depends on not successfully finished methods 
[com.demoapp.qa.testcases.SearchTest.searchWithInValidProduct() on instance com.demoapp.qa.testcases.SearchTest@742ff096]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method com.demoapp.qa.testcases.SearchTest.searchWithBlankValue() on instance com.demoapp.qa.testcases.SearchTest@742ff096 depends on not successfully finished methods 
[com.demoapp.qa.testcases.SearchTest.searchWithInValidProduct() on instance com.demoapp.qa.testcases.SearchTest@742ff096]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithBlankValue -->
      </class> <!-- com.demoapp.qa.testcases.SearchTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
